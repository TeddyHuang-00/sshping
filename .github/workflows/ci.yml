# Based on typst's release action:
# https://github.com/typst/typst/blob/main/.github/workflows/release.yml

name: Test Build Binaries
on:
  push:
    tags-ignore:
      - "**"
  workflow_dispatch:

jobs:
  test-build:
    name: test ${{ matrix.target }}(${{ matrix.feature }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            feature: include-openssl
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
            feature: include-openssl
          - target: armv7-unknown-linux-musleabi
            os: ubuntu-latest
            cross: true
            feature: include-openssl
          - target: x86_64-apple-darwin
            os: macos-latest
            cross: false
            feature: include-openssl
          - target: aarch64-apple-darwin
            os: macos-latest
            cross: false
            feature: include-openssl
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
            feature: include-openssl
          # Run build test on selected platforms without include-openssl
          # as others are known to fail
          - target: aarch64-apple-darwin
            os: macos-latest
            cross: false
            feature: default
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
            feature: default

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Run Cross
        if: ${{ matrix.cross }}
        run: |
          cargo install cross --git https://github.com/cross-rs/cross.git
          cross build --release --target ${{ matrix.target }} --features ${{ matrix.feature }}

      - name: Run Cargo
        if: ${{ !matrix.cross }}
        run: cargo build --release --target ${{ matrix.target }} --features ${{ matrix.feature }}

      # We might include unit test in the future, but we don't have any at the time
